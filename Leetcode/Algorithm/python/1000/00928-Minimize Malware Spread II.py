from collections import defaultdict

INF = 10 ** 10

class Solution(object):
    def minMalwareSpread(self, graph, initial):
        initial = set(initial)
        
        d = defaultdict(int)
        cnc = {}
        
        for cur in initial:
            connected = set()
            self.dfs(cur, initial, graph, connected)
            
            for node in connected:
                d[node] += 1
            cnc[cur] = connected
                
        for cur in initial:
            assert d[cur] == 1
            
        mini = -1
        minv = INF
        
        for key, connected in sorted(cnc.items()):
            tot = len(graph)
            for node, visited in d.items():
                if visited == 1 and node in connected:
                    tot -= 1
            if tot < minv:
                minv = tot
                mini = key
        return mini
    
    def dfs(self, cur, initial, graph, connected):
        if cur in connected:
            return
        
        connected.add(cur)
        
        for i in xrange(len(graph[cur])):
            if graph[cur][i] == 0:
                continue
            if i in initial:
                continue
            if i in connected:
                continue
            self.dfs(i, initial, graph, connected)
            
                    
